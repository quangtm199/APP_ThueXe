/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import controller.Connect;
import javax.swing.text.BadLocationException;
import model.Nhacc;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/**
 *
 * @author Dell
 */
public class NhaCungCap extends javax.swing.JFrame {

   DefaultTableModel tbn = new DefaultTableModel();
    public NhaCungCap() {
        initComponents();
        loadData();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
    }
     
     //ham do du lieu vao bang

    public void loadData() {
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            int number;
            Vector row, column;
            column = new Vector();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from NhaCungCap");
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();//tra ve so cot
            for (int i = 1; i <= number; i++) {
                column.add(metadata.getColumnName(i));//lay ra tieu de  cac cot
            }
            tbn.setColumnIdentifiers(column);
            while (rs.next()) {
                row = new Vector();

                row.addElement(rs.getString(1));
                row.addElement(rs.getString(2));
                row.addElement(rs.getString(3));
                row.addElement(rs.getString(4));
                row.addElement(rs.getString(5));
                row.addElement(rs.getString(6));
                row.addElement(rs.getString(7));
                
                
//                for(int i =1;i<=number;i++){
//                    row.addElement(rs.getString(i));
//                }
                tbn.addRow(row);
                jTable1.setModel(tbn);
            }
            jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (jTable1.getSelectedRow() >= 0) {
                        txtMancc.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "");
                        txtTenncc.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1) + "");
                        txtDiachincc.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "");
                       txtSdt.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3) + "");
                        txtEmail.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4) + "");
                        txtNvlienhe.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5) + "");
                        txtDouytin.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6) + "");
                    }
                }
            });

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtMancc = new javax.swing.JTextField();
        txtTenncc = new javax.swing.JTextField();
        txtDiachincc = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNvlienhe = new javax.swing.JTextField();
        txtDouytin = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tfnhapfile = new javax.swing.JTextField();
        txtTimKiem = new javax.swing.JTextField();
        cbTimKiem = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Quản Lý Nhà Cung Cấp");

        jLabel2.setText("Mã NCC");

        jLabel3.setText("Tên NCC");

        jLabel4.setText("Địa Chỉ");

        jLabel5.setText("SĐT");

        jLabel6.setText("Email");

        jLabel7.setText("NV liên hệ");

        jLabel8.setText("Độ uy tín");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel9.setText("Tìm Kiếm");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Nhập file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("xuất file");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tfnhapfile.setText("E:/BangSach.xls");

        cbTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mã ncc", "tên ncc", "địa chỉ", "email" }));
        cbTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMancc))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(txtTenncc)))
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addGap(24, 24, 24)
                                                        .addComponent(txtSdt))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel4)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtDiachincc)))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel8))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(158, 158, 158)
                                                .addComponent(jLabel7)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNvlienhe, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                            .addComponent(txtDouytin)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(btnThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSua)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoa))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)
                                .addGap(34, 34, 34)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(33, 33, 33)
                .addComponent(tfnhapfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(tfnhapfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(txtMancc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenncc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtNvlienhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(txtDiachincc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDouytin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private boolean checkTrungMaSach(){
        try {
            Connection connection = Connect.getConnection();
            String query = "SELECT * FROM dbo.nhacungcap where mancc= ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, txtMancc.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(BangXe.class.getName()).log(Level.SEVERE, null, ex);
        }return false;
          
            
        
    
   
        
}
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
       if(txtMancc.getText().equals("")){
           JOptionPane.showMessageDialog(rootPane, "Chua Nhap Ma nha cc");
       txtMancc.requestFocus();
       return;
       }
       else if(txtTenncc.getText().equals("")){
       JOptionPane.showMessageDialog(rootPane, "Chua Nhap bien so");
       txtTenncc.requestFocus();
       return;}
       else if(txtDiachincc.getText().equals("")){
           JOptionPane.showMessageDialog(rootPane, "Chua Nhap mau xe");
       txtDiachincc.requestFocus();
       return;}
       else if (txtSdt.getText().equals("")){
       JOptionPane.showMessageDialog(rootPane, "Chua Nhap giathue");
        txtSdt.requestFocus();
       return;}
       else if(txtEmail.getText().equals("")){JOptionPane.showMessageDialog(null, "them trang thai chua thanh cong");
       return;}
       else if(txtNvlienhe.getText().equals("")){JOptionPane.showMessageDialog(null, "them thoi gian bao hiem chua thanh cong");
       return;}
       String masach=txtMancc.getText();
       if(masach.length()!=6){
       JOptionPane.showMessageDialog(rootPane, "MaNhacc phai co 6 ki tu");
       txtMancc.requestFocus();
       return;}
        try {
            String a1=txtMancc.getText(0, 3);
            boolean a5=a1.equals("NCC");
            boolean a2=Character.isDigit(masach.charAt(3));
            boolean a3=Character.isDigit(masach.charAt(4));
              boolean a4=Character.isDigit(masach.charAt(5));
              
              if((a2&&a3&&a4&&a5)==false){
                  JOptionPane.showMessageDialog(null, "nhap sai dinh dang Ma Xe NCCxxx");
                  return;
              }
        } catch (BadLocationException ex) {
            Logger.getLogger(BangXe.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      if(checkTrungMaSach()==true){
          JOptionPane.showMessageDialog(null,"Ma NCC da ton tai");
          txtMancc.requestFocus();
          return;
          
      }   // TODO add your handling code here:
        


// TODO add your handling code here:
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            PreparedStatement ps = conn.prepareStatement("insert into NhaCungCap values(?,?,?,?,?,?,?)");
            ps.setString(1, txtMancc.getText());
            ps.setString(2, txtTenncc.getText());
            ps.setString(3, txtDiachincc.getText());
            ps.setString(4, txtSdt.getText());
            ps.setString(5, txtEmail.getText());
            ps.setString(6, txtNvlienhe.getText());
            ps.setString(7, txtDouytin.getText());
           
           
            int chk = ps.executeUpdate();
            if (chk > 0) {
                JOptionPane.showMessageDialog(this, "Them thanh cong!");
                tbn.setRowCount(0);
                loadData();
            } else {
            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
         try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            PreparedStatement ps = conn.prepareStatement("Update NhaCungCap set Tenncc=?,Diachincc=?,Sdt=?,Email=?,Nvlienhe=?,Douytin=?  Where Mancc=?");
             ps.setString(7, txtMancc.getText());
            ps.setString(1, txtTenncc.getText());
            ps.setString(2, txtDiachincc.getText());
            ps.setString(3, txtSdt.getText());
            ps.setString(4, txtEmail.getText());
            ps.setString(5, txtNvlienhe.getText());
            ps.setString(6, txtDouytin.getText());

            int chk = ps.executeUpdate();
            if (chk > 0) {
                JOptionPane.showMessageDialog(this, "Sửa thanh cong!");
                tbn.setRowCount(0);
                loadData();
            } else {
            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        try {
            Connect a = new Connect();
            Connection conn = a.getConnection();
            PreparedStatement ps = conn.prepareStatement("Delete NhaCungCap Where Mancc=?");
            ps.setString(1, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            if (JOptionPane.showConfirmDialog(this, "Delete this NhanVien?", "Confirm",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                ps.executeUpdate();
                tbn.setRowCount(0);
                loadData();
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnXoaActionPerformed
public class ReadExcelDemo {
 
   public  void main(String[] args) throws IOException {
  
       // Đọc một file XSL.
       FileInputStream inputStream = new FileInputStream(new File("C:/demo/employee.xls"));
  
       // Đối tượng workbook cho file XSL.
       HSSFWorkbook workbook = new HSSFWorkbook(inputStream);
 
  
       // Lấy ra sheet đầu tiên từ workbook
       HSSFSheet sheet = workbook.getSheetAt(1);
 
  
       // Lấy ra Iterator cho tất cả các dòng của sheet hiện tại.
       Iterator<Row> rowIterator = sheet.iterator();
 
       while (rowIterator.hasNext()) {
           Row row = rowIterator.next();
     
           // Lấy Iterator cho tất cả các cell của dòng hiện tại.
           Iterator<Cell> cellIterator = row.cellIterator();
 
           while (cellIterator.hasNext()) {
               Cell cell = cellIterator.next();
  
               // Đổi thành getCellType() nếu sử dụng POI 4.x
               CellType cellType = cell.getCellType();
 
               switch (cellType) {
               case _NONE:
                   System.out.print("");
                   System.out.print("\t");
                   break;
               case BOOLEAN:
                   System.out.print(cell.getBooleanCellValue());
                   System.out.print("\t");
                   break;
               case BLANK:
                   System.out.print("");
                   System.out.print("\t");
                   break;
               case FORMULA:
       
                   // Công thức
                   System.out.print(cell.getCellFormula());
                   System.out.print("\t");
                    
                   FormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();
         
                   // In ra giá trị từ công thức
                   System.out.print(evaluator.evaluate(cell).getNumberValue());
                   break;
               case NUMERIC:
                   System.out.print(cell.getNumericCellValue());
                   System.out.print("\t");
                   break;
               case STRING:
                   System.out.print(cell.getStringCellValue());
                   System.out.print("\t");
                   break;
               case ERROR:
                   System.out.print("!");
                   System.out.print("\t");
                   break;
               }
 
           }
           System.out.println("");
       }
   }
 
}

    public class SimpleExcelReader {

    public void main(String[] args) throws IOException {
	    String excelFilePath = "E:/NiceJavaBooks.xls";
	    SimpleExcelReader reader = new SimpleExcelReader();
	    List<Nhacc> listBooks = reader.readBooksFromExcelFile(excelFilePath);
	    System.out.println(listBooks);
	}

	private Object getCellValue(Cell cell) {
           CellType celltype = cell.getCellType();
           Object cellvalue = null;
	    switch (celltype) {
	    case STRING:
               return cell.getStringCellValue();
	      
	 
	    case BOOLEAN:
	        return cell.getBooleanCellValue();
	 
            case NUMERIC :
	        return cell.getNumericCellValue();
            case _NONE:
            case BLANK :
            case ERROR:
                break;
            default:break;
            }
	 
	    return cellvalue;
	}
	
	public List<Nhacc> readBooksFromExcelFile(String excelFilePath) throws IOException {
	    List<Nhacc> listBooks = new ArrayList<>();
	    FileInputStream inputStream = new FileInputStream(new File(excelFilePath));
	 
	    Workbook workbook = getWorkbook(inputStream, excelFilePath);
	    Sheet firstSheet = workbook.getSheetAt(0);
	    Iterator<Row> iterator = firstSheet.iterator();
	     
	    if(iterator.hasNext()) {
	        Row nextRow = iterator.next();
           
	        Iterator<Cell> cellIterator = nextRow.cellIterator();      
	    }
	 while(iterator.hasNext()) {
	        Row nextRow = iterator.next();
           
	        Iterator<Cell> cellIterator = nextRow.cellIterator();
	     Nhacc aBook = new Nhacc();
	 
	        while (cellIterator.hasNext()) {
	            Cell nextCell = cellIterator.next();
	            int columnIndex = nextCell.getColumnIndex();
	 
	            switch (columnIndex) {
                        
                        
                        
	            case 0:
	                aBook.setMancc((String) getCellValue(nextCell));
	                break;
	            case 1:
	                aBook.setTenncc((String) getCellValue(nextCell));
	                break;
	            case 2:
	                aBook.setDiachi((String) getCellValue(nextCell));
	                break;
                    case 3:
	                aBook.setSdt((String) getCellValue(nextCell));
	                break;
                    case 4:
	                aBook.setEmail((String) getCellValue(nextCell));
	                break;
                       case 5:
	                aBook.setNvlienhe((String) getCellValue(nextCell));
	                break;
                            case 6:
	                aBook.setDouytin((String) getCellValue(nextCell));
	                break;
	            
                    
                    
                    }
	 
	 
	        }
	        listBooks.add(aBook);
	    }
	    workbook.close();
	    inputStream.close();
	 
	    return listBooks;
	}
	
    //Được sử dụng để có thể đọc được cả định dạng .xls và xlsx
	private Workbook getWorkbook(FileInputStream inputStream, String excelFilePath)
	        throws IOException {
	    Workbook workbook = null;
	 
	    if (excelFilePath.endsWith("xlsx")) {
	        workbook = new XSSFWorkbook(inputStream);
	    } else if (excelFilePath.endsWith("xls")) {
	        workbook = new HSSFWorkbook(inputStream);
	    } else {
	        throw new IllegalArgumentException("The specified file is not Excel file");
	    }
	 
	    return workbook;
	}
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   try {
            String excelFilePath = tfnhapfile.getText();
            SimpleExcelReader reader = new SimpleExcelReader();
            List<Nhacc> listBooks;
            
        
            listBooks = reader.readBooksFromExcelFile(excelFilePath);
            for (Nhacc aBook : listBooks) {
                Connection connection = Connect.getConnection();
            String query = "INSERT INTO dbo.[Nhacungcap](mancc, tenncc, diachincc ,sdt, email, nvlienhe, douytin) "+
                    "VALUES(?,?,?,?,?,?,?)";
            PreparedStatement ps;
                try {
                    ps = connection.prepareStatement(query);
               
            ps.setString(1, aBook.getMancc());
            ps.setString(2, aBook.getTenncc());
            ps.setString(3, aBook.getDiachi());
            ps.setString(4, aBook.getSdt());
            ps.setString(5, aBook.getEmail());
            
            ps.setString(6, aBook.getNvlienhe());
            ps.setString(7, aBook.getDouytin());
             
                    ps.executeUpdate();
                     tbn.setRowCount(0);
                     loadData();
                    JOptionPane.showMessageDialog(null, "nhap thanh cong");
                } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Đã Trùng Mã nha cung cap");
                   break;
                }
            
            Connect.closeConnection(connection);
         
           
            
            }
           
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "nhap dung duong dan file ");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
public class SimpleExcelWriter {

	public void main(String[] args) throws IOException {
		
		SimpleExcelWriter excelWriter = new SimpleExcelWriter();
		 
		List<Nhacc> listBook = excelWriter.getListBook();
		String excelFilePath = "E:/BangSach.xls";
		 
                excelWriter.writeExcel(listBook, excelFilePath);
	}
    private CellStyle style;
	
	private Workbook getWorkbook(String excelFilePath)
	        throws IOException {
	    Workbook workbook = null;
	 
	    if (excelFilePath.endsWith("xlsx")) {
	        workbook = new XSSFWorkbook();
	    } else if (excelFilePath.endsWith("xls")) {
	        workbook = new HSSFWorkbook();
	    } else {
	        throw new IllegalArgumentException("The specified file is not Excel file");
	    }
	 
	    return workbook;
	}
	
	public void writeExcel(List<Nhacc> listBook, String excelFilePath) throws IOException {
	    Workbook workbook = getWorkbook(excelFilePath);
	    Sheet sheet = workbook.createSheet();
	    createHeaderRow(sheet);
	    int rowCount = 0;
	 
	    for (Nhacc aBook : listBook) {
	        Row row = sheet.createRow(++rowCount);
	        writeBook(aBook, row);
	    }
	 
	    try (FileOutputStream outputStream = new FileOutputStream(excelFilePath)) {
	        workbook.write(outputStream);
	    }
	}
	
	private void writeBook(Nhacc aBook, Row row) {
	    Cell cell = row.createCell(0);
	   cell.setCellValue(aBook.getMancc());
	 
	    cell = row.createCell(1);
	    cell.setCellValue(aBook.getTenncc());
	 
	    cell = row.createCell(2);
	    cell.setCellValue(aBook.getDiachi());
            cell=row.createCell(3);
            cell.setCellValue(aBook.getSdt());
            cell=row.createCell(4);
            cell.setCellValue(aBook.getEmail());
            cell=row.createCell(5);
            cell.setCellValue(aBook.getNvlienhe());
            cell=row.createCell(6);
            cell.setCellValue(aBook.getDouytin());
	}
	
    //Có thể format được như in đậm, set font
	private void createHeaderRow(Sheet sheet) {
            
		 
	    CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
	    Font font = sheet.getWorkbook().createFont();
	    font.setBold(true);
	    font.setFontHeightInPoints((short) 16);
	    cellStyle.setFont(font);
	  
	    Row row = sheet.createRow(0);
            
          
          Cell  cell = row.createCell(0, CellType.STRING);
          cell.setCellValue("mancc");
           cell.setCellStyle(style);
	     cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("tncc");
        cell.setCellStyle(style);
	     cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("diachi");
        cell.setCellStyle(style);
	   cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("sdt");
        cell.setCellStyle(style);
            cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("email");
        cell.setCellStyle(style);
            
              cell = row.createCell(5, CellType.STRING);
        cell.setCellValue("nvlienhe");
        cell.setCellStyle(style);
              cell = row.createCell(6, CellType.STRING);
        cell.setCellValue("douytin");
        cell.setCellStyle(style);
	}

	public List<Nhacc> getListBook() {
             List<Nhacc> listBook = new ArrayList<>();
                String sql = "select * from dbo.nhacungcap";
                  java.sql.Connection connection=Connect.getConnection();
            try {
               
              
                PreparedStatement ps =connection.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    Nhacc book= new Nhacc();
                    book.setMancc(rs.getString("mancc"));
                    book.setTenncc(rs.getString("tenncc"));         
                    book.setDiachi(rs.getString("diachincc"));
                    book.setSdt(rs.getString("sdt"));
                   
                    book.setNvlienhe(rs.getString("nvlienhe"));
                    book.setEmail(rs.getString("email"));
                    book.setDouytin(rs.getString("douytin"));
                listBook.add(book);
                }
                connection.close();
                
               
                
                
            } catch (SQLException ex) {
                Logger.getLogger(SimpleExcelWriter.class.getName()).log(Level.SEVERE, null, ex);
            }
            return listBook;
	}

}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
SimpleExcelWriter excelWriter = new SimpleExcelWriter();
		 
		List<Nhacc> listBook = excelWriter.getListBook();
		String excelFilePath = "E:/BangSach.xls";
		 
		try {
			excelWriter.writeExcel(listBook, excelFilePath);
                        JOptionPane.showMessageDialog(null, "da xuat thanh cong ra E:/BangSach.xls");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Đã Có lỗi Xảy ra vui lòng kiểm tra lại");
		}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTimKiemActionPerformed
        // TODO add your handling code here:
        String a1 = (String) cbTimKiem.getSelectedItem();
        if (a1.equals("mã ncc")) {
            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();
                // Câu lệnh xem dữ liệu
                String sql = "select * from NhaCungCap ";
                // Nếu tìm kiếm theo BookID
                if (txtTimKiem.getText().length() > 0) {
                    sql = sql + "where mancc like '%" + txtTimKiem.getText() + "%' ";
                }
                // Tạo đối tượng thực thi câu lệnh Select
                Statement st = conn.createStatement();

                // Thực thi 
                ResultSet rs = st.executeQuery(sql);
                Vector data = null;
                tbn.setRowCount(0);
                // Nếu sách không tồn tại
                if (rs.isBeforeFirst() == false) {
                    JOptionPane.showMessageDialog(this, "Mã ncc không tồn tại!");
                    return;
                }
                //trong khi chưa hết dữ liệu
                while (rs.next()) {
                    data = new Vector();

                    data.add(rs.getString("mancc"));
                    data.add(rs.getString("tenncc"));
                    data.add(rs.getString("diachincc"));
                    data.add(rs.getString("sdt"));
                    data.add(rs.getString("email"));
                    data.add(rs.getString("nvlienhe"));
                    data.add(rs.getString("douytin"));
                
                   
                    // Thêm một dòng vào table model
                    tbn.addRow(data);
                }
                jTable1.setModel(tbn); // Thêm dữ liệu vào table
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }
        } else  if (a1.equals("tên ncc")) {
            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();
                // Câu lệnh xem dữ liệu
                String sql = "select * from NhaCungCap ";
                // Nếu tìm kiếm theo BookID
                if (txtTimKiem.getText().length() > 0) {
                    sql = sql + "where Tenncc like N'%" + txtTimKiem.getText() + "%' ";
                }
                // Tạo đối tượng thực thi câu lệnh Select
                Statement st = conn.createStatement();

                // Thực thi 
                ResultSet rs = st.executeQuery(sql);
                Vector data = null;
                tbn.setRowCount(0);
                // Nếu sách không tồn tại
                if (rs.isBeforeFirst() == false) {
                    JOptionPane.showMessageDialog(this, "tên ncc không tồn tại!");
                    return;
                }
                //trong khi chưa hết dữ liệu
                while (rs.next()) {
                    data = new Vector();

                    data.add(rs.getString("mancc"));
                    data.add(rs.getString("tenncc"));
                    data.add(rs.getString("diachincc"));
                    data.add(rs.getString("sdt"));
                    data.add(rs.getString("email"));
                    data.add(rs.getString("nvlienhe"));
                    data.add(rs.getString("douytin"));
                
                   
                    // Thêm một dòng vào table model
                    tbn.addRow(data);
                }
                jTable1.setModel(tbn); // Thêm dữ liệu vào table
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }
        } else  if (a1.equals("địa chỉ")) {
            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();
                // Câu lệnh xem dữ liệu
                String sql = "select * from NhaCungCap ";
                // Nếu tìm kiếm theo BookID
                if (txtTimKiem.getText().length() > 0) {
                    sql = sql + "where diachincc like N'%" + txtTimKiem.getText() + "%' ";
                }
                // Tạo đối tượng thực thi câu lệnh Select
                Statement st = conn.createStatement();

                // Thực thi 
                ResultSet rs = st.executeQuery(sql);
                Vector data = null;
                tbn.setRowCount(0);
                // Nếu sách không tồn tại
                if (rs.isBeforeFirst() == false) {
                    JOptionPane.showMessageDialog(this, "điạ chỉ ncc không tồn tại!");
                    return;
                }
                //trong khi chưa hết dữ liệu
                while (rs.next()) {
                    data = new Vector();

                    data.add(rs.getString("mancc"));
                    data.add(rs.getString("tenncc"));
                    data.add(rs.getString("diachincc"));
                    data.add(rs.getString("sdt"));
                    data.add(rs.getString("email"));
                    data.add(rs.getString("nvlienhe"));
                    data.add(rs.getString("douytin"));
                
                   
                    // Thêm một dòng vào table model
                    tbn.addRow(data);
                }
                jTable1.setModel(tbn); // Thêm dữ liệu vào table
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }
        }else  if (a1.equals("email")) {
            try {
                Connect a = new Connect();
                Connection conn = a.getConnection();
                // Câu lệnh xem dữ liệu
                String sql = "select * from NhaCungCap ";
                // Nếu tìm kiếm theo BookID
                if (txtTimKiem.getText().length() > 0) {
                    sql = sql + "where email like '%" + txtTimKiem.getText() + "%' ";
                }
                // Tạo đối tượng thực thi câu lệnh Select
                Statement st = conn.createStatement();

                // Thực thi 
                ResultSet rs = st.executeQuery(sql);
                Vector data = null;
                tbn.setRowCount(0);
                // Nếu sách không tồn tại
                if (rs.isBeforeFirst() == false) {
                    JOptionPane.showMessageDialog(this, "email ncc không tồn tại!");
                    return;
                }
                //trong khi chưa hết dữ liệu
                while (rs.next()) {
                    data = new Vector();

                    data.add(rs.getString("mancc"));
                    data.add(rs.getString("tenncc"));
                    data.add(rs.getString("diachincc"));
                    data.add(rs.getString("sdt"));
                    data.add(rs.getString("email"));
                    data.add(rs.getString("nvlienhe"));
                    data.add(rs.getString("douytin"));
                
                   
                    // Thêm một dòng vào table model
                    tbn.addRow(data);
                }
                jTable1.setModel(tbn); // Thêm dữ liệu vào table
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }
        }
          
    }//GEN-LAST:event_cbTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhaCungCap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhaCungCap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhaCungCap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhaCungCap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhaCungCap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbTimKiem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tfnhapfile;
    private javax.swing.JTextField txtDiachincc;
    private javax.swing.JTextField txtDouytin;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMancc;
    private javax.swing.JTextField txtNvlienhe;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTenncc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
